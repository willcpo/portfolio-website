{"version":3,"sources":["../../src/components/Projects.js"],"names":["Projects","props","state","projectNum","githubLink","projectInfo","infoRows","renderProject","bind","chooseProject","map","row","src","text","setState","context","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AACA;IAEMA,Q;;;;;AAEL,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,CADA;AAEZC,MAAAA,UAAU,EAAEC,wBAAY,CAAZ,EAAeD,UAFf;AAGZE,MAAAA,QAAQ,EAAED,wBAAY,CAAZ,EAAeC;AAHb,KAAb,CAHiB,CASjB;;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB;AAXiB;AAYjB;;;;oCAEc;AACd,aAAO,KAAKN,KAAL,CAAWI,QAAX,CAAoBI,GAApB,CAAwB,UAACC,GAAD,EAAO;AACrC,eACC;AAAK,UAAA,GAAG,EAAEA,GAAG,CAACC,GAAd;AAAmB,UAAA,SAAS,EAAC;AAA7B,WACC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC;AAAK,UAAA,GAAG,EAAED,GAAG,CAACC;AAAd,UADD,CADD,EAIC;AAAK,UAAA,SAAS,EAAC;AAAf,WACC,2CAAID,GAAG,CAACE,IAAR,CADD,CAJD,CADD;AAUA,OAXM,CAAP;AAYA;;;kCAEaV,U,EAAW;AACxB,WAAKW,QAAL,CAAc;AACbX,QAAAA,UAAU,EAAEA,UADC;AAEbC,QAAAA,UAAU,EAAEC,wBAAYF,UAAZ,EAAwBC,UAFvB;AAGbE,QAAAA,QAAQ,EAAED,wBAAYF,UAAZ,EAAwBG;AAHrB,OAAd;AAMA;;;6BAEO;AACP,aACC,kEACA,gCAAC,sBAAD;AAAY,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWc,OAAhC;AAAyC,QAAA,aAAa,EAAE,KAAKN,aAA7D;AAA4E,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC;AAAnG,QADA,EAEA;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,KAAKI,aAAL,EADF,CAFA,EAKA;AAAG,QAAA,SAAS,EAAC,YAAb;AAA0B,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWE;AAA3C,oCALA,CADD;AASA;;;;EAlDqBY,kBAAMC,S;;eAuDdjB,Q","sourcesContent":["import React from \"react\";\nimport SliderMenu from \"./SliderMenu\";\nimport projectInfo from \"../projectInfo\";\n//import * as api from \"../api\";\n\nclass Projects extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tprojectNum: 0,\n\t\t\tgithubLink: projectInfo[0].githubLink,\n\t\t\tinfoRows: projectInfo[0].infoRows\n\t\t};\n\n\t\t//Remember to set 'this' to the component for all custom functions\n\t\tthis.renderProject = this.renderProject.bind(this);\n\t\tthis.chooseProject = this.chooseProject.bind(this);\n\t}\n\n\trenderProject(){\n\t\treturn this.state.infoRows.map((row)=>{\n\t\t\treturn (\n\t\t\t\t<div key={row.src} className=\"projectRow\">\n\t\t\t\t\t<div className=\"projectImg\">\n\t\t\t\t\t\t<img src={row.src}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"projectText\">\n\t\t\t\t\t\t<p>{row.text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\tchooseProject(projectNum){\n\t\tthis.setState({\n\t\t\tprojectNum: projectNum,\n\t\t\tgithubLink: projectInfo[projectNum].githubLink,\n\t\t\tinfoRows: projectInfo[projectNum].infoRows\n\t\t});\n\t\t\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<>\n\t\t\t<SliderMenu context={this.props.context} chooseProject={this.chooseProject} projectNum={this.state.projectNum}/>\n\t\t\t<div className=\"projectBox\">\n\t\t\t\t{this.renderProject()}\n\t\t\t</div>\n\t\t\t<a className=\"githubLink\" href={this.state.githubLink}> â†³ Link to Github  </a>\n\t\t\t</>\n\t\t);\n\t}\n\n\t\n}\n\nexport default Projects;"],"file":"Projects.js"}